{"version":3,"sources":["views/Cast/Cast.js"],"names":["Cast","state","actors","a","filmsApi","this","props","match","params","movieId","then","actor","setState","map","src","profile_path","alt","name","character","popularity","id","Component"],"mappings":"2QAGqBA,E,4MACnBC,MAAQ,CACNC,OAAQ,I,8FAGV,iCAAAC,EAAA,sDACEC,IAAkBC,KAAKC,MAAMC,MAAMC,OAAOC,SAASC,MAAK,SAAAC,GACtD,EAAKC,SAAS,CACZV,OAAQS,OAHd,gD,0EAQA,WACE,IAAQT,EAAWG,KAAKJ,MAAhBC,OAER,OACE,mCACE,6BACGA,EAAOW,KAAI,SAAAF,GAAK,OACf,+BACE,qBAAKG,IAAG,UAND,mCAMC,OAAgBH,EAAMI,cAAgBC,IAAKL,EAAMM,OAExDf,GACC,iCACE,6CAAgBS,EAAMM,QACtB,4CAAeN,EAAMO,aACrB,6CAAgBP,EAAMQ,mBAPnBR,EAAMS,e,GApBOC","file":"static/js/cast-view.1416feb4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as filmsApi from '../../components/services/Api';\n\nexport default class Cast extends Component {\n  state = {\n    actors: [],\n  };\n\n  async componentDidMount() {\n    filmsApi.castFilm(this.props.match.params.movieId).then(actor => {\n      this.setState({\n        actors: actor,\n      });\n    });\n  }\n\n  render() {\n    const { actors } = this.state;\n    const Base_Url = 'https://image.tmdb.org/t/p/w200';\n    return (\n      <>\n        <ul>\n          {actors.map(actor => (\n            <li key={actor.id}>\n              <img src={`${Base_Url}${actor.profile_path}`} alt={actor.name} />\n\n              {actors && (\n                <span>\n                  <p>Actor name: {actor.name}</p>\n                  <p>Character: {actor.character}</p>\n                  <p>Popularity: {actor.popularity}</p>\n                </span>\n              )}\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}